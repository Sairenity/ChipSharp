using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ChipSharp
{
    public class IOState
    {
        public byte[] Rom { get; set; } = { 0x60, 0x03, 0x61, 0x08, 0x62, 0x0F, 0xA2, 0x1A, 0xD0, 0x1F, 0x80, 0x14, 0xF2, 0x1E, 0x30, 0x43, 0x12, 0x08, 0x60, 0x24, 0x61, 0x17, 0xD0, 0x14, 0x12, 0x18, 0x0F, 0x3F, 0x7F, 0x78, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0x78, 0x7F, 0x3F, 0x0F, 0x81, 0xE1, 0xF1, 0x79, 0x31, 0x01, 0x01, 0x01, 0x01, 0x01, 0x31, 0x79, 0xF1, 0xE1, 0x81, 0xC0, 0xC0, 0xC0, 0xC0, 0xCF, 0xFF, 0xE3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0x0E, 0x0E, 0x00, 0x00, 0x0E, 0x8E, 0xCE, 0xCE, 0xCE, 0xCE, 0xCE, 0xCE, 0xCE, 0xCE, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x77, 0x7F, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x7F, 0x77, 0x00, 0x00, 0x00, 0x00, 0x87, 0xE7, 0xE0, 0x71, 0x71, 0x77, 0x77, 0x71, 0xE3, 0xE3, 0x83, 0x63, 0x63, 0x63, 0xC6, 0xFF, 0xFF, 0xC6, 0xCE, 0x8C, 0xFF, 0xFF, 0x8C, 0x9C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0 };
        public bool[] Display = new bool[64 * 32];
        public bool[] KeyState { get; set; } = new bool[16];
        public bool Reset { get; set; }
        public bool ForceRedraw { get; set; }
    }
}
